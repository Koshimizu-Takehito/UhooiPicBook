name: UhooiPicBook

options:
  bundleIdPrefix: com.theuhooi
  deploymentTarget:
    iOS: 13.0
  developmentLanguage: ja
  xcodeVersion: "12.2"
  carthageExecutablePath: ./Scripts/Carthage/carthage.sh

settings:
  base:
    MARKETING_VERSION: 1.3.0
    CURRENT_PROJECT_VERSION: 14
    DEVELOPMENT_TEAM: 47E56DYP3N
  configs:
    debug:
      DEBUG_INFORMATION_FORMAT: "dwarf-with-dsym"

packages:
  Rswift:
    url: https://github.com/mac-cain13/R.swift.Library
    version: 5.3.0
  Gedatsu:
    url: https://github.com/bannzai/Gedatsu
    version: 1.2.0
  SwiftPrettyPrint:
    url: https://github.com/YusukeHosonuma/SwiftPrettyPrint
    version: 1.0.0

targets:
  UhooiPicBook:
    type: application
    platform: iOS
    sources:
      - UhooiPicBook
      - Shared
      - path: "UhooiPicBook/Generated/MockResults.swift"
        optional: true
        type: file
      - path: "UhooiPicBook/Generated/R.generated.swift"
        optional: true
        type: file
    settings:
      base:
        INFOPLIST_FILE: UhooiPicBook/Resources/Info.plist
        CODE_SIGN_ENTITLEMENTS: UhooiPicBook/Resources/UhooiPicBook.entitlements
        OTHER_LDFLAGS: $(inherited) $(OTHER_LDFLAGS) -ObjC
        OTHER_SWIFT_FLAGS: $(inherited) -Xfrontend -warn-long-expression-type-checking=500 -Xfrontend -warn-long-function-bodies=500
        DEVELOPMENT_LANGUAGE: jp
    dependencies:
      - target: UhooiPicBookStickers
        embed: true
        codeSign: false
        buildPhase:
          copyFiles:
            destination: plugins
      - target: UhooiPicBookWidgets
      - target: UhooiPicBookWidgetsConfigurableIntent
      - package: Rswift
      - package: Gedatsu
      - package: SwiftPrettyPrint
      - framework: Carthage/Build/iOS/abseil.framework
        embed: false
      - framework: Carthage/Build/iOS/BoringSSL-GRPC.framework
        embed: false
      - framework: Carthage/Build/iOS/FIRAnalyticsConnector.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseABTesting.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseAnalytics.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseCore.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseCoreDiagnostics.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseCrashlytics.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseFirestore.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseInstallations.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseInstanceID.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseMessaging.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebasePerformance.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseRemoteConfig.framework
        embed: false
      - framework: Carthage/Build/iOS/GoogleAppMeasurement.framework
        embed: false
      - framework: Carthage/Build/iOS/GoogleDataTransport.framework
        embed: false
      - framework: Carthage/Build/iOS/GoogleToolboxForMac.framework
        embed: false
      - framework: Carthage/Build/iOS/GoogleUtilities.framework
        embed: false
      - framework: Carthage/Build/iOS/gRPC-C++.framework
        embed: false
      - framework: Carthage/Build/iOS/gRPC-Core.framework
        embed: false
      - framework: Carthage/Build/iOS/GTMSessionFetcher.framework
        embed: false
      - framework: Carthage/Build/iOS/leveldb-library.framework
        embed: false
      - framework: Carthage/Build/iOS/nanopb.framework
        embed: false
      - framework: Carthage/Build/iOS/PromisesObjC.framework
        embed: false
      - framework: Carthage/Build/iOS/Protobuf.framework
        embed: false
    preBuildScripts:
      - path: ./Scripts/XcodeGen/rswift.sh
        name: Generate Resources with R.swift
        inputFiles:
          - $TEMP_DIR/rswift-lastrun
        outputFiles:
          - $SRCROOT/$TARGET_NAME/Generated/R.generated.swift
      - path: ./Scripts/XcodeGen/mockolo.sh
        name: Generate Mocks with Mockolo
        outputFiles:
          - $SRCROOT/$TARGET_NAME/Generated/MockResults.swift
    postCompileScripts:
      - path: ./Scripts/XcodeGen/swiftlint.sh
        name: Run SwiftLint
      - path: ./Scripts/XcodeGen/spellchecker.sh
        name: Run SpellChecker
    postBuildScripts:
      - script: /bin/sh ./Scripts/FirebaseCrashlytics/run
        name: Run Firebase Crashlytics
        inputFiles:
          - $(SRCROOT)/$(BUILT_PRODUCTS_DIR)/$(INFOPLIST_PATH)

  UhooiPicBookTests:
    type: bundle.unit-test
    platform: iOS
    sources:
      - UhooiPicBookTests
    settings:
      base:
        INFOPLIST_FILE: UhooiPicBookTests/Info.plist
    dependencies:
      - target: UhooiPicBook

  UhooiPicBookUITests:
    type: bundle.ui-testing
    platform: iOS
    sources:
      - UhooiPicBookUITests
    settings:
      base:
        INFOPLIST_FILE: UhooiPicBookUITests/Info.plist
    dependencies:
      - target: UhooiPicBook

  UhooiPicBookStickers:
    type: app-extension.messages-sticker-pack
    platform: iOS
    deploymentTarget: 11.0
    sources:
      - UhooiPicBookStickers
    settings:
      base:
        ASSETCATALOG_COMPILER_APPICON_NAME: "iMessage App Icon"
        CLANG_ENABLE_OBJC_WEAK: YES
        CODE_SIGN_IDENTITY: "iPhone Developer"
        CODE_SIGN_STYLE: Automatic
        GCC_PREPROCESSOR_DEFINITIONS:
          - "DEBUG=1"
          - "$(inherited)"
        INFOPLIST_FILE: UhooiPicBookStickers/Info.plist
        LD_RUNPATH_SEARCH_PATHS: ""
        MTL_ENABLE_DEBUG_INFO: INCLUDE_SOURCE
        MTL_FAST_MATH: YES
        PRODUCT_BUNDLE_IDENTIFIER: com.theuhooi.UhooiPicBook.Stickers
        PRODUCT_NAME: "UhooiPicBookStickers"
        SKIP_INSTALL: YES

  UhooiPicBookWidgets:
    type: app-extension
    platform: iOS
    deploymentTarget: 14.0
    settings:
      base:
        ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME: AccentColor
        ASSETCATALOG_COMPILER_WIDGET_BACKGROUND_COLOR_NAME: WidgetBackground
        CODE_SIGN_IDENTITY: "iPhone Developer"
        CODE_SIGN_STYLE: Automatic
        GCC_PREPROCESSOR_DEFINITIONS:
          - "DEBUG=1"
          - "$(inherited)"
        INFOPLIST_FILE: UhooiPicBookWidgets/Info.plist
        LD_RUNPATH_SEARCH_PATHS:
          - "$(inherited)"
          - "@executable_path/Frameworks"
          - "@executable_path/../../Frameworks"
        OTHER_LDFLAGS: $(inherited) $(OTHER_LDFLAGS) -ObjC
        PRODUCT_BUNDLE_IDENTIFIER: com.theuhooi.UhooiPicBook.Widgets
        PRODUCT_NAME: "UhooiPicBookWidgets"
        SKIP_INSTALL: YES
    sources:
      - UhooiPicBookWidgets
      - Shared
    dependencies:
      - sdk: SwiftUI.framework
      - sdk: WidgetKit.framework
      - framework: Carthage/Build/iOS/abseil.framework
        embed: false
      - framework: Carthage/Build/iOS/BoringSSL-GRPC.framework
        embed: false
      - framework: Carthage/Build/iOS/FIRAnalyticsConnector.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseAnalytics.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseCore.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseCoreDiagnostics.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseCrashlytics.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseFirestore.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseInstallations.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseRemoteConfig.framework
        embed: false
      - framework: Carthage/Build/iOS/GoogleAppMeasurement.framework
        embed: false
      - framework: Carthage/Build/iOS/GoogleDataTransport.framework
        embed: false
      - framework: Carthage/Build/iOS/GoogleToolboxForMac.framework
        embed: false
      - framework: Carthage/Build/iOS/GoogleUtilities.framework
        embed: false
      - framework: Carthage/Build/iOS/gRPC-C++.framework
        embed: false
      - framework: Carthage/Build/iOS/gRPC-Core.framework
        embed: false
      - framework: Carthage/Build/iOS/GTMSessionFetcher.framework
        embed: false
      - framework: Carthage/Build/iOS/leveldb-library.framework
        embed: false
      - framework: Carthage/Build/iOS/nanopb.framework
        embed: false
      - framework: Carthage/Build/iOS/PromisesObjC.framework
        embed: false
      - framework: Carthage/Build/iOS/Protobuf.framework
        embed: false
    postBuildScripts:
      - script: /bin/sh ./Scripts/FirebaseCrashlytics/run
        name: Run Firebase Crashlytics
        inputFiles:
          - $(SRCROOT)/$(BUILT_PRODUCTS_DIR)/$(INFOPLIST_PATH)

  UhooiPicBookWidgetsConfigurableIntent:
    type: app-extension
    platform: iOS
    deploymentTarget: 14.0
    settings:
      base:
        CODE_SIGN_IDENTITY: "iPhone Developer"
        CODE_SIGN_STYLE: Automatic
        GCC_PREPROCESSOR_DEFINITIONS:
          - "DEBUG=1"
          - "$(inherited)"
        INFOPLIST_FILE: UhooiPicBookWidgetsConfigurableIntent/Info.plist
        LD_RUNPATH_SEARCH_PATHS:
          - "$(inherited)"
          - "@executable_path/Frameworks"
          - "@executable_path/../../Frameworks"
        OTHER_LDFLAGS: $(inherited) $(OTHER_LDFLAGS) -ObjC
        PRODUCT_BUNDLE_IDENTIFIER: com.theuhooi.UhooiPicBook.Widgets.ConfigurableIntent
        PRODUCT_NAME: "UhooiPicBookWidgetsConfigurableIntent"
        SKIP_INSTALL: YES
    sources:
      - UhooiPicBookWidgetsConfigurableIntent
      - Shared
    dependencies:
      - framework: Carthage/Build/iOS/abseil.framework
        embed: false
      - framework: Carthage/Build/iOS/BoringSSL-GRPC.framework
        embed: false
      - framework: Carthage/Build/iOS/FIRAnalyticsConnector.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseAnalytics.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseCore.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseCoreDiagnostics.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseCrashlytics.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseFirestore.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseInstallations.framework
        embed: false
      - framework: Carthage/Build/iOS/FirebaseRemoteConfig.framework
        embed: false
      - framework: Carthage/Build/iOS/GoogleAppMeasurement.framework
        embed: false
      - framework: Carthage/Build/iOS/GoogleDataTransport.framework
        embed: false
      - framework: Carthage/Build/iOS/GoogleToolboxForMac.framework
        embed: false
      - framework: Carthage/Build/iOS/GoogleUtilities.framework
        embed: false
      - framework: Carthage/Build/iOS/gRPC-C++.framework
        embed: false
      - framework: Carthage/Build/iOS/gRPC-Core.framework
        embed: false
      - framework: Carthage/Build/iOS/GTMSessionFetcher.framework
        embed: false
      - framework: Carthage/Build/iOS/leveldb-library.framework
        embed: false
      - framework: Carthage/Build/iOS/nanopb.framework
        embed: false
      - framework: Carthage/Build/iOS/PromisesObjC.framework
        embed: false
      - framework: Carthage/Build/iOS/Protobuf.framework
        embed: false
    postBuildScripts:
      - script: /bin/sh ./Scripts/FirebaseCrashlytics/run
        name: Run Firebase Crashlytics
        inputFiles:
          - $(SRCROOT)/$(BUILT_PRODUCTS_DIR)/$(INFOPLIST_PATH)

schemes:
  UhooiPicBook:
    build:
      targets:
        UhooiPicBook: all
    run:
      config: Debug
    test:
      config: Debug
      gatherCoverageData: true
      coverageTargets:
        - UhooiPicBook
      targets:
        - name: UhooiPicBookTests
          parallelizable: true
          randomExecutionOrder: true
        - name: UhooiPicBookUITests
          parallelizable: true
          randomExecutionOrder: true
    profile:
      config: Release
    analyze:
      config: Debug
    archive:
      config: Release
